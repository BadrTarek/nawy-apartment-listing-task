version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: nawy
      POSTGRES_PASSWORD: nawy123
      POSTGRES_DB: nawy_apartments
    ports:
      - "5555:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass nawy123
    ports:
      - "6666:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3300:3300"
    environment:
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: nawy
      DB_PASSWORD: nawy123
      DB_NAME: nawy_apartments
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: nawy123
      REDIS_KEY_PREFIX: nawy
      # Server
      SERVER_URL: http://localhost:3300
      SERVER_UPLOADS_PATH: uploads
      SERVER_PORT: 3300
      # Environment
      NODE_ENV: production
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    command: >
      sh -c "
        echo 'Waiting for postgres to be ready...' &&
        sleep 5 &&
        cd /app &&
        yarn migration:run &&
        echo 'Starting backend service...' &&
        node ./dist/index.js
      "
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      API_BASE_URL: http://backend:3300
      NODE_ENV: production
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_uploads: